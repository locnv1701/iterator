spring.application.name=api-iterator-backend
server.port=8088
app.timezone=Asia/Ho_Chi_Minh
spring.main.banner-mode=off
# MySQL
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:13306}/${DB_DATABASE:iterator}?serverTimezone=${app.timezone}&useUnicode=yes&characterEncoding=UTF-8&characterSetResults=UTF-8&enabledTLSProtocols=TLSv1.2
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASS:jisooyaaa}
## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
## This is important
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=none
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
### Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=50
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.pool-prepared-statements=true
spring.datasource.max-open-prepared-statements=250
#
#### Enable logging to verify that HikariCP is used, the second entry is specific to HikariCP
logging.level.org.hibernate.SQL=off
logging.level.com.zaxxer.hikari.HikariConfig=off
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=off
spring.groovy.template.check-template-location=false
spring.mvc.favicon.enabled=false
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false